buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = mod_version
group = 'mrthomas20121.create_tools'
archivesBaseName = 'Create Tools Complement 1.19.2'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            mods {
                create_tools {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.console.level', 'debug'

            mods {
                create_tools {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'create_tools', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                create_tools {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        name = "Modmaven"
        url = uri("https://modmaven.dev/")

        content {
            includeGroup("appeng")
        }
    }
    maven {
        name 'Thermal Maven'
        url 'https://maven.covers1624.net/'
    }
    maven { // TOP
        url 'https://maven.tterrag.com/'
    }
    maven { // JEI and Tinkers
        url 'https://dvs1.progwml6.com/files/maven/'
    }
    maven { // Patchouli
        url 'https://maven.blamejared.com/'
    }
    maven { // Curios
        url 'https://maven.theillusivec4.top/'
    }
    maven {
        name "cf"
        url "https://cursemaven.com/"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    implementation(fg.deobf("appeng:appliedenergistics2-forge:${ae2_version}"))

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-common-api:${jei_version}")
    compileOnly fg.deobf("mezz.jei:jei-${mc_version}-forge-api:${jei_version}")

    // at runtime, use the full JEI
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-common:${jei_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

    implementation fg.deobf("com.teamcofh:cofh_core:${mc_version}-${cofh_core_version}.+")
    implementation fg.deobf("com.teamcofh:thermal_core:${mc_version}-${thermal_core_version}.+")
    implementation fg.deobf("com.teamcofh:thermal_expansion:${mc_version}-${thermal_expansion_version}.+")
    implementation fg.deobf("curse.maven:tools-complement-552642:4382367")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Create Tools Complement",
            "Specification-Vendor": "Mrthomas20121",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" : "create_tools",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
